Create DB:
CREATE DATABASE udaecom;

Create sequelize src folder (src2)


const path = require('path')
module.exports = {
    config: path.resolve('./src2/database/config', 'config.js'),
    'models-path': path.resolve('./src2/database/models'),
    'seeders-path': path.resolve('./src2/database/seeders'),
    'migrations-path': path.resolve('./src2/database/migrations'),
}


Create tables in order:
without FK's

address
state
gender
size
category
brand
payment
role

with FK's

user (depends on adresses)
userHasRole (depends on users and roles)
order (depends on: payments, users, usersAdresses, states)}
shipping (attributes are hidden from view but seems like it demends on orders - AT LEAST)
product (depends on: brands, categories, sizes, genders)
orderDetail (depends on: orders, products)
image (depends on: products)


Sequelize create table CMDs:

No dependencies:
sequelize model:generate --name address --attributes street:string,number:integer
sequelize model:generate --name state --attributes description:string
sequelize model:generate --name gender --attributes type:string
sequelize model:generate --name size --attributes value:string
sequelize model:generate --name category --attributes name:string
sequelize model:generate --name brand --attributes name:string
sequelize model:generate --name payment --attributes type:string
sequelize model:generate --name role --attributes description:string

(the attribute for size is made up, as it is not shown)
Now, the dependent tables:

sequelize model:generate --name user --attributes first_name:string,last_name:string,username:string,email:string,password:string,addresses_id:integer
sequelize model:generate --name users_has_role --attributes users_id:integer, roles_id:integer
sequelize model:generate --name order --attributes number:integer,date:integer,total:decimal,payments_id:integer,users_id:integer,users_addresses_id:integer,states_id:integer
sequelize model:generate --name shipping --attributes street:string,number:integer,order_id:integer
sequelize model:generate --name product --attributes name:string,price:decimal,stock:integer,stock_min:integer,stock_max:integer,brands_id:integer,categories_id:integer
sequelize model:generate --name image --attributes name:string,product_id:integer
sequelize model:generate --name order_detail --attributes quantity:decimal,subtotal:decimal,order_id:integer,product_id:integer

Always check if migrations ran in the correct order. sometimes when copypasting some switches places. and order of excecution of migrations is really important.
In case you fucked up you can run model:generate with an extra parameter at the end called --force . this updates the model and creates a new migration.



run migrations with:

node_modules/.bin/sequelize db:migrate

documentation of all changes made:


migration order_details:

      order_id: {
        type: Sequelize.INTEGER,
        references: {
          model: "orders",
          key: "id"
        }
      },
      product_id: {
        type: Sequelize.INTEGER,
        references: {
          model: "products",
          key: "id"
        }
      },

